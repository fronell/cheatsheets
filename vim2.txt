#{{{ Movement Commands
ctrl-d			# Scroll down half a page
ctrl-u			# Scroll up half a page
ctrl-f			# Scroll forward one page
ctrl-b			# Scroll back one page
(			# Move to the beginning of current sentence
)			# Move to the end of next sentence
{			# Move to the beginning of current paragraph
}			# Move to the beginning of next paragraph
[[			# Move to the beginning of current section
]]			# Move to the beginning of next section
<line num>G		# Move to <line num>
#}}}
#{{{ Editing Commands
a			# Append after cursor
A			# Append after line
x			# Delete character at cursor
r			# Replace character at cursor
R			# Replace character at cursor onward
o			# Opens line below cursor and starts in insert mode
O			# Opens line above cursor and starts in insert mode
I			# Insert text at beginning of the line
<num>i<char><esc>	# Insert <char> <num> times
#}}}
#{{{ Operators
d			# Delete word
U			# Undo whole line
CTRL-R			# Redo
p			# Paste taste that has been yanked
<buffer letter>p	# Paste taste from <buffer letter>
y			# Yanks text from visual select
<buffer letter>y	# Yanks text into <buffer letter>
c			# Change text
#}}}
#{{{ Motions - Can use a count (number)
0			# To the beginning of the line
w			# Until the start of the next word
e			# Until the end of the current word
$			# To the end of the line
<num>G			# Jump to line <num> in file
G			# Move to the bottom of a file
M			# Move to the middle of the screen
gg			# Move to the start of a file
:n			# Jump to line n
%			# Move to corresponding bracket
v			# Visual select
b			# Back one character
0			# Move cursor to the beginning of the line
$			# Move cursor to the end of the line
(			# Move cursor to the beginning of current sentence
)			# Move cursor to beginning of next sentence
#}}}
#{{{ Commands
N			# Search opposite direction
?			# Search for phrase backward direction
ggn			# Jump to first search results
GN			# Jump to last search result
CTRL-O			# Go back to where you came from
CTRL-I			# Goes forward
.			# Repeat last command
z[Enter]		# Reposition line cursor is on to the top of the screen
z.			# Reposition line cursor is on to the middle of the screen
z-			# Reposition line cursor is on to the bottom of the screen
Q			# Places you in the ex editor
vi			# Returns you to vi
#}}}
#{{{ Folding
zf#j			# Creates a fold from the cursor down  #  lines.
zf/string		# Creates a fold from the cursor to string .
zj			# Moves the cursor to the next fold.
zk			# Moves the cursor to the previous fold.
zo			# Opens a fold at the cursor.
zO			# Opens all folds at the cursor.
zm			# Increases the foldlevel by one.
zM			# Closes all open folds.
zr			# Decreases the foldlevel by one.
zR			# Decreases the foldlevel to zero -- all folds will be open.
zd			# Deletes the fold at the cursor.
zE			# Deletes all folds.
[z			# Move to start of open fold.
]z			# Move to end of open fold.
#}}}
#{{{ Settings - Prepend with set and no to disable
:set ic			# Ignore case
:incsearch		# Incremental search
:set hls			# Highlight searches
:AutoComplPopEnable	# Enable auto popup completion
:AutoComplPopDisable	# Disable auto popup completion
:filetype=python	# Sets filetype as python
:set nu			# Display line numbers
:set nonumber		# Disable line numbering
:set nohls		# Disable search highlighting
:e!			# Discards changes and reloads files
#}}}
#{{{ Runtime Options
-R			# Open file as read-only
#}}}
#{{{ ex Commands
:<Up>			# Scroll through history of ex commands
:sh			# Creates a shell to run multiple commands
:r !date		# Reads command into file
:!<command>		# Executes <command>
:r <filename|!>		# Pastes <filename|command> below cursor position
:i<num><character>	# Inserts <character> <num> times
#}}}
#{{{ Searching
:g/pattern/p		# Prints all lines that match pattern
:!g/pattern/nu		# Prints all line numbers that don't contain pattern
#}}}
#{{{ Substitution
:/pat1/,/pat2/<op>	# Perform the <operation> on all lines between pattern1 & 2
:s/old/new		# Substitute first old in a line
:s/old/new/g		# Substitute all olds in a line
<num1>,<num2>s/old/new	# Substitute all olds between line <num1> & <num2>
:%s/old/new/g		# Substitute all occurences in file
:%s/old/new/gc		# Substitute all occurences in file with confirmation
:g/pattern/s/old/new/g	# Globally replace all instances of old with new where line matches pattern
:s/^/#			# Place a # at the beginning of each line
:s/c:\\temp/\/home\/csworn/g	# Glocally replace c:\temp with /home/csworn
%s/[CTRL-v][Tab]//g	#Delete all the tabs
#}}}
#{{{ Window Management
:tabnew			# Open file in a new tab
:tabclose		# Close the current tab
^Wq			# Close current tab
:tabonly		# Close all tabs but the current one
:tabn			# Switch to next tab
^<Page UP>		# Switch to next tab
:tabp			# Switch to previous tab
^<Page Down>		# Switch to previous tab
:tabfir			# Switch to first tab
:tablast		# Switch to last tab
:tabm <number>		# Switch tab to position <number>
:tabdo			# Run command across all open tabs
^Ws			# Splits the window horizontally
^Wj			# Moves to the next window down
^Wk			# Moves to the next window up
^WJ			# Moves current window to bottom of screen, using full width of screen
^WL			# Moves current window to right of screen, using full height of screen
^WT			# Moves current window to a new existing tab
^W-			# Decreases current window height by one line
^W+			# Increases current window height by one line
^W=			# Resizes all windows to equal size
^W(<|>)			# Adjust window width
#}}}
#{{{ Marking
m(a-z|A-Z)		# Set marker (a-z|A-Z)
'(a-z|A-Z)		# Moves cursor to first character on line (a-z|A-z)
`(a-z|A-z)		# Moves cursor to character marked by (a-z|A-z)
``(a-z|A-z)		# Returns to exact position before move
''(a-z|A-z)		# Returns to beginning of line before move
#}}zo}
